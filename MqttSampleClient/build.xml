<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2015, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
  ~
  ~ WSO2 Inc. licenses this file to you under the Apache License,
  ~ Version 2.0 (the "License"); you may not use this file except
  ~ in compliance with the License.
  ~ You may obtain a copy of the License at
  ~
  ~  http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing,
  ~ software distributed under the License is distributed on an
  ~ "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
  ~ KIND, either express or implied.  See the License for the
  ~ specific language governing permissions and limitations
  ~ under the License.
  -->

<project name="MqttSampleClient" default="all">
  
  
  <property file="build.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <property name="skip.tests" value="true"/>
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/CVS/**"/>
    <exclude name="**/SCCS/**"/>
    <exclude name="**/RCS/**"/>
    <exclude name="**/rcs/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/.pyc/**"/>
    <exclude name="**/.pyo/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/*.lib/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/.bundle/**"/>
    <exclude name="**/*.rbc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.zip"/>
    <include name="*.apk"/>
    <include name="*.war"/>
    <include name="*.egg"/>
    <include name="*.ear"/>
    <include name="*.ane"/>
    <include name="*.swc"/>
    <include name="*.jar"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  
  <!-- Project Libraries -->
  
  <path id="library.maven:_avalon-framework:avalon-framework:4.1.3.classpath">
    <pathelement location="${path.variable.maven_repository}/avalon-framework/avalon-framework/4.1.3/avalon-framework-4.1.3.jar"/>
  </path>
  
  <path id="library.maven:_commons-logging:commons-logging:1.1.classpath">
    <pathelement location="${path.variable.maven_repository}/commons-logging/commons-logging/1.1/commons-logging-1.1.jar"/>
  </path>
  
  <path id="library.maven:_javax.servlet:servlet-api:2.3.classpath">
    <pathelement location="${path.variable.maven_repository}/javax/servlet/servlet-api/2.3/servlet-api-2.3.jar"/>
  </path>
  
  <path id="library.maven:_log4j:log4j:1.2.13.classpath">
    <pathelement location="${path.variable.maven_repository}/log4j/log4j/1.2.13/log4j-1.2.13.jar"/>
  </path>
  
  <path id="library.maven:_logkit:logkit:1.0.1.classpath">
    <pathelement location="${path.variable.maven_repository}/logkit/logkit/1.0.1/logkit-1.0.1.jar"/>
  </path>
  
  <path id="library.maven:_org.eclipse.paho:mqtt-client:0.4.0.classpath">
    <pathelement location="${path.variable.maven_repository}/org/eclipse/paho/mqtt-client/0.4.0/mqtt-client-0.4.0.jar"/>
  </path>
  
  <!-- Modules -->
  
  
  <!-- Module simple_mqtt_client -->
  
  <dirname property="module.simple_mqtt_client.basedir" file="${ant.file}"/>
  
  
  
  <property name="compiler.args.simple_mqtt_client" value="-encoding UTF-8 -source 1.6 ${compiler.args}"/>
  
  <property name="simple_mqtt_client.output.dir" value="${module.simple_mqtt_client.basedir}/target/classes"/>
  <property name="simple_mqtt_client.testoutput.dir" value="${module.simple_mqtt_client.basedir}/target/test-classes"/>
  
  <path id="simple_mqtt_client.module.bootclasspath">
    <!-- Paths to be included in compilation bootclasspath -->
  </path>
  
  <path id="simple_mqtt_client.module.production.classpath">
    <path refid="library.maven:_org.eclipse.paho:mqtt-client:0.4.0.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.13.classpath"/>
    <path refid="library.maven:_logkit:logkit:1.0.1.classpath"/>
    <path refid="library.maven:_avalon-framework:avalon-framework:4.1.3.classpath"/>
    <path refid="library.maven:_javax.servlet:servlet-api:2.3.classpath"/>
  </path>
  
  <path id="simple_mqtt_client.runtime.production.module.classpath">
    <pathelement location="${simple_mqtt_client.output.dir}"/>
    <path refid="library.maven:_org.eclipse.paho:mqtt-client:0.4.0.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.13.classpath"/>
    <path refid="library.maven:_logkit:logkit:1.0.1.classpath"/>
    <path refid="library.maven:_avalon-framework:avalon-framework:4.1.3.classpath"/>
    <path refid="library.maven:_javax.servlet:servlet-api:2.3.classpath"/>
  </path>
  
  <path id="simple_mqtt_client.module.classpath">
    <pathelement location="${simple_mqtt_client.output.dir}"/>
    <path refid="library.maven:_org.eclipse.paho:mqtt-client:0.4.0.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.13.classpath"/>
    <path refid="library.maven:_logkit:logkit:1.0.1.classpath"/>
    <path refid="library.maven:_avalon-framework:avalon-framework:4.1.3.classpath"/>
    <path refid="library.maven:_javax.servlet:servlet-api:2.3.classpath"/>
  </path>
  
  <path id="simple_mqtt_client.runtime.module.classpath">
    <pathelement location="${simple_mqtt_client.testoutput.dir}"/>
    <pathelement location="${simple_mqtt_client.output.dir}"/>
    <path refid="library.maven:_org.eclipse.paho:mqtt-client:0.4.0.classpath"/>
    <path refid="library.maven:_commons-logging:commons-logging:1.1.classpath"/>
    <path refid="library.maven:_log4j:log4j:1.2.13.classpath"/>
    <path refid="library.maven:_logkit:logkit:1.0.1.classpath"/>
    <path refid="library.maven:_avalon-framework:avalon-framework:4.1.3.classpath"/>
    <path refid="library.maven:_javax.servlet:servlet-api:2.3.classpath"/>
  </path>
  
  
  <patternset id="excluded.from.module.simple_mqtt_client">
    <patternset refid="ignored.files"/>
  </patternset>
  
  <patternset id="excluded.from.compilation.simple_mqtt_client">
    <patternset refid="excluded.from.module.simple_mqtt_client"/>
  </patternset>
  
  <path id="simple_mqtt_client.module.sourcepath">
    <dirset dir="${module.simple_mqtt_client.basedir}">
      <include name="src/main/java"/>
      <include name="src/main/resources"/>
    </dirset>
  </path>
  
  <path id="simple_mqtt_client.module.test.sourcepath">
    <dirset dir="${module.simple_mqtt_client.basedir}">
      <include name="src/test/java"/>
    </dirset>
  </path>
  
  
  <target name="compile.module.simple_mqtt_client" depends="compile.module.simple_mqtt_client.production,compile.module.simple_mqtt_client.tests" description="Compile module simple_mqtt_client"/>
  
  <target name="compile.module.simple_mqtt_client.production" description="Compile module simple_mqtt_client; production classes">
    <mkdir dir="${simple_mqtt_client.output.dir}"/>
    <javac destdir="${simple_mqtt_client.output.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.simple_mqtt_client}"/>
      <bootclasspath refid="simple_mqtt_client.module.bootclasspath"/>
      <classpath refid="simple_mqtt_client.module.production.classpath"/>
      <src refid="simple_mqtt_client.module.sourcepath"/>
      <patternset refid="excluded.from.compilation.simple_mqtt_client"/>
    </javac>
    
    <copy todir="${simple_mqtt_client.output.dir}">
      <fileset dir="${module.simple_mqtt_client.basedir}/src/main/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
      <fileset dir="${module.simple_mqtt_client.basedir}/src/main/resources">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="compile.module.simple_mqtt_client.tests" depends="compile.module.simple_mqtt_client.production" description="compile module simple_mqtt_client; test classes" unless="skip.tests">
    <mkdir dir="${simple_mqtt_client.testoutput.dir}"/>
    <javac destdir="${simple_mqtt_client.testoutput.dir}" debug="${compiler.debug}" nowarn="${compiler.generate.no.warnings}" memorymaximumsize="${compiler.max.memory}" fork="true">
      <compilerarg line="${compiler.args.simple_mqtt_client}"/>
      <bootclasspath refid="simple_mqtt_client.module.bootclasspath"/>
      <classpath refid="simple_mqtt_client.module.classpath"/>
      <src refid="simple_mqtt_client.module.test.sourcepath"/>
      <patternset refid="excluded.from.compilation.simple_mqtt_client"/>
    </javac>
    
    <copy todir="${simple_mqtt_client.testoutput.dir}">
      <fileset dir="${module.simple_mqtt_client.basedir}/src/test/java">
        <patternset refid="compiler.resources"/>
        <type type="file"/>
      </fileset>
    </copy>
  </target>
  
  <target name="clean.module.simple_mqtt_client" description="cleanup module">
    <delete dir="${simple_mqtt_client.output.dir}"/>
    <delete dir="${simple_mqtt_client.testoutput.dir}"/>
  </target>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.simple_mqtt_client" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.simple_mqtt_client" description="build all modules"/>

    <target name="all" depends="run" description="build all"/>

    <target name="run" depends="build.modules">
        <java classname="org.wso2.sample.mqtt.Main"
              classpathref="simple_mqtt_client.runtime.production.module.classpath" fork="true">
        </java>
    </target>
</project>
